name: CI

on:
    push:
        branches: [main]
    pull_request:

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        name: test ${{ matrix.rust }} ${{ matrix.flags }}
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                rust: ["stable", "beta", "nightly", "1.65"] # MSRV
                flags: ["--no-default-features", "", "--all-features"]
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rust }}
            - uses: Swatinem/rust-cache@v2
            # Only run tests on latest stable and above
            - name: check
              if: ${{ matrix.flags != '--all-features' && matrix.rust == '1.65' }} # MSRV
              run: cargo check --workspace ${{ matrix.flags }}
            - name: test
              if: ${{ matrix.rust != '1.65' }} # MSRV
              run: cargo test --workspace ${{ matrix.flags }}

    wasm:
        name: check WASM
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
              with:
                  targets: wasm32-unknown-unknown
            - uses: Swatinem/rust-cache@v2
            - name: check
              run: cargo check --workspace --target wasm32-unknown-unknown

    feature-checks:
        name: feature checks
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@stable
            - uses: taiki-e/install-action@cargo-hack
            - uses: Swatinem/rust-cache@v2
            - name: cargo hack
              run: cargo hack check --feature-powerset --depth 2 --all-targets

    clippy:
        name: clippy
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@clippy
            - uses: Swatinem/rust-cache@v2
            - run: cargo clippy --workspace --all-targets --all-features
              env:
                  RUSTFLAGS: -Dwarnings

    docs:
        name: docs
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
            - uses: Swatinem/rust-cache@v2
            - run: cargo doc --workspace --all-features --no-deps --document-private-items
              env:
                  RUSTDOCFLAGS: "--cfg docsrs -D warnings"

    fmt:
        name: fmt
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rustfmt
            - run: cargo fmt --all --check
